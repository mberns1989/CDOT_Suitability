# -*- coding: utf-8 -*-
"""
Created on Fri Nov  1 10:32:55 2019

@author: Ian Heckman, Matt Berns, & Alex Trout
"""
# importing libraries 
import arcpy 
from arcpy import env
from arcpy.sa import *

# setting workspace 
env.workspace = r'D:\Programming\Suitability_project\data'
env.overwriteOutput = 1 

boundary = 'Project_Bounds.shp'

unclipped_shps = ['Highways.shp', 'Critical_habitat.shp', 'Wetlands.shp']
clip_results = ['.\proj_roads.shp', '.\proj_habitat.shp', '.\proj_wetlands.shp']
buffered = ['.\roads_buff', '.\habitat_buff', '.\wetlands_buff']

# clipping each input feature to the project boundaries 
# appending wetlands clipped file to clipped list as it was already clipped
for u, c in zip(unclipped_shps, clip_results): 
    arcpy.Clip_analysis(u, boundary, c)

# running euclidean distance function for each input
# reclassifying euclidean distance outputs
counter = 0 
for r, e in zip(clip_results, buffered):
    if counter == 0:
        arcpy.sa.EucDistance(r, 50, 50, e)
        reclassify = arcpy.Reclassify(e, 'Value', RemapRamge([0, 50, 1], [50, 100000, 'NODATA']))
        reclassify.save(e)
        counter = counter + 1
    elif counter == 1: 
        arcpy.sa.EucDistance(r, 500, 50, e)
        reclassify = arcpy.Reclassify(e, 'Value', RemapRamge([0, 500, 1], [500, 100000, 'NODATA']))
        reclassify.save(e)
        counter = counter + 1
    elif counter == 2: 
        arcpy.sa.EucDistance(r, 100, 50, e)
        reclassify = arcpy.Reclassify(e, 'Value', RemapRamge([0, 100, 1], [100, 100000, 'NODATA']))
        reclassify.save(e)
print('The data has been prepared for analysis')


#####MERGING DEM#####

import os
import rasterio
import glob
from rasterio.merge import merge

os.chdir(r'C:\Programming\Prog_Auto_FINAL')

#File Paths 
fp = (r'C:\Programming\Prog_Auto_FINAL')
output_fp = (r'C:\Programming\Prog_Auto_FINAL\front_range_dem.tif')

#Selecting DEM Files 
file_dems = "*.tif"

q = os.path.join(fp,file_dems)

#List all DEMs
all_dems = glob.glob(q)

#Create an Empty List for DEM Mosaic 
front_range_dem = []

#Append DEM rasters to list
for dem in all_dems:
    d = rasterio.open(dem)
    front_range_dem.append(d)

mosaic, out_trans = merge(front_range_dem)

#Write metadata

metadata = d.meta.copy()
metadata.update({"driver": "GTiff","height": mosaic.shape[1],"width": mosaic.shape[2],"transform": out_trans,"crs": "+proj=utm +zone=13 +ellps=NAD83 +units=m +no_defs "})

#Output Front Range DEM

with rasterio.open(output_fp, "w", **metadata) as dest:
    dest.write(mosaic)




    

